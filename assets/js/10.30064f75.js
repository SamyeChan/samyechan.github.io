(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{223:function(t,a,r){"use strict";r.r(a);var s=r(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"css的3大特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#css的3大特性","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS的3大特性")]),t._v(" "),r("h2",{attrs:{id:"层叠性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#层叠性","aria-hidden":"true"}},[t._v("#")]),t._v(" 层叠性")]),t._v(" "),r("p",[r("strong",[t._v("当一个标签被设置了多个重复的样式的时候，一个属性会覆盖另外一个属性。")])]),t._v(" "),r("ul",[r("li",[t._v("遵循原则：就近原则，在不考虑优先级的情况下，在多个样式中最终生效的样式是离标签最近的样式；")]),t._v(" "),r("li",[t._v("只覆盖同样的不可重复的样式属性，不会覆盖不重复的属性；")])]),t._v(" "),r("h2",{attrs:{id:"继承性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#继承性","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承性")]),t._v(" "),r("p",[r("strong",[t._v("当子标签没有设置样式时，会继承父标签的样式。")])]),t._v(" "),r("ul",[r("li",[t._v("可继承的属性比如有字体类属性（字体颜色、字体大小之类的）、文本类属性（行高之类的）、背景类属性（背景颜色之类的）；")]),t._v(" "),r("li",[t._v("子标签不会继承父标签的宽度、高度、边距属性；")])]),t._v(" "),r("h2",{attrs:{id:"优先级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优先级","aria-hidden":"true"}},[t._v("#")]),t._v(" 优先级")]),t._v(" "),r("p",[r("strong",[t._v("!important > 行内样式 > id选择器 > 类选择器 > 标签选择器 > 通配符 > 继承")])]),t._v(" "),r("ul",[r("li",[t._v("优先级高的规则会忽视层叠性，忽视就近原则来定义样式；")]),t._v(" "),r("li",[t._v("!important是css的一种语法，定义在样式属性后面，代表这个属性不会被覆盖，最终生效的属性一定是!important标注的属性；")])])])}],!1,null,null,null);a.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{240:function(v,t,_){"use strict";_.r(t);var e=_(0),i=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"vue组件化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue组件化","aria-hidden":"true"}},[v._v("#")]),v._v(" Vue组件化")]),v._v(" "),_("ol",[_("li",[v._v("深入理解 Vue 的组件化机制")]),v._v(" "),_("li",[v._v("掌握 Vue 组件化常用技术")])]),v._v(" "),_("ul",[_("li",[v._v("组件传值、通信")]),v._v(" "),_("li")]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("能够设计并实现多种类型的组件")]),v._v(" "),_("li",[v._v("通过组件化实践加深对 Vue 原理理解")])]),v._v(" "),_("h2",{attrs:{id:"组件通信"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件通信","aria-hidden":"true"}},[v._v("#")]),v._v(" 组件通信")]),v._v(" "),_("p",[v._v("父 -> 子")]),v._v(" "),_("ul",[_("li",[v._v("props（子）")]),v._v(" "),_("li",[v._v("引用 refs（父）")])]),v._v(" "),_("p",[v._v("子 -> 父")]),v._v(" "),_("ul",[_("li",[v._v("$emit('add', good)（子）")]),v._v(" "),_("li",[v._v('@add="cartAdd($event)"')])]),v._v(" "),_("p",[v._v("兄弟组件")]),v._v(" "),_("ul",[_("li",[v._v("$parent -> $on / $emit")])]),v._v(" "),_("p",[v._v("祖先和后代之间")]),v._v(" "),_("p",[v._v("祖先 -> 后代")]),v._v(" "),_("ul",[_("li",[v._v("provide / inject （实现祖先给后代传值）- 主要为高阶插件/组件库提供用例，并不推荐直接用于应用程序代码中 -> 多见于开源组件库；")])]),v._v(" "),_("p",[v._v("后代 -> 祖先")]),v._v(" "),_("p",[v._v("dispatch 后代给祖先传值")])])}],!1,null,null,null);t.default=i.exports}}]);
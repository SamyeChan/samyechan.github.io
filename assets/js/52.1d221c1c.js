(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{337:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"function-详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-详解","aria-hidden":"true"}},[t._v("#")]),t._v(" Function 详解")]),t._v(" "),s("h2",{attrs:{id:"全局作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局作用域")]),t._v(" "),s("ol",[s("li",[t._v("声明在任何函数以外的变量或者函数体 - 全局变量/全局函数;")]),t._v(" "),s("li",[t._v("wndow (在浏览器 window 本身和作用域有合并) 的属性;")]),t._v(" "),s("li",[t._v("在浏览器中,默认不写 var，浏览器就会认为是要给 window 的属性;")])]),t._v(" "),s("h2",{attrs:{id:"函数作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数作用域")]),t._v(" "),s("ol",[s("li",[t._v("声明在函数内部的数据，作用范围只在函数内容 - 函数的局部变量;")]),t._v(" "),s("li",[t._v("变量、函数的参数、声明在函数内部函数；")])]),t._v(" "),s("h2",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("ol",[s("li",[t._v("作用域链：数据的一种查找规则；")]),t._v(" "),s("li",[t._v("当我们调用数据时，会在当前作用域进行查找，若找不到就会向上查找父作用域，直到 window")])]),t._v(" "),s("h2",{attrs:{id:"修改-this-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改-this-指向","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改 this 指向")]),t._v(" "),s("h3",{attrs:{id:"function-call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-call","aria-hidden":"true"}},[t._v("#")]),t._v(" function.call()")]),t._v(" "),s("ul",[s("li",[t._v("调用函数，并修改函数中的 this 指向；")]),t._v(" "),s("li",[t._v("执行函数的 call 方法，会调用该函数，并修改函数中的 this 指向；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("指向谁"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("call 中第 0 个参数代表当前执行时，函数中的 this 指向谁；")]),t._v(" "),s("li",[t._v("call 中其余参数就和普通方法的参数一样了；")])]),t._v(" "),s("h3",{attrs:{id:"function-apply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-apply","aria-hidden":"true"}},[t._v("#")]),t._v(" function.apply()")]),t._v(" "),s("ul",[s("li",[t._v("调用函数，并修改函数中的 this 指向；")]),t._v(" "),s("li",[t._v("执行函数的 apply 方法，会调用该函数，并修改函数中的 this 指向；")]),t._v(" "),s("li",[t._v("call 允许传入无限个参数；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("指向谁"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("apply 中第 0 个参数代表当前执行时，函数中的 this 指向谁；")]),t._v(" "),s("li",[t._v("apply 中第 1 个参数是一个数组，数组中代表了我们要往函数中串传递的参数；")]),t._v(" "),s("li",[t._v("apply 仅允许两个参数；")])]),t._v(" "),s("h3",{attrs:{id:"call-和-apply-的应用-？？？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call-和-apply-的应用-？？？","aria-hidden":"true"}},[t._v("#")]),t._v(" call 和 apply 的应用 ？？？")]),t._v(" "),s("h3",{attrs:{id:"function-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-bind","aria-hidden":"true"}},[t._v("#")]),t._v(" function.bind()")]),t._v(" "),s("ul",[s("li",[t._v("调用函数的 bind 方法，会返回一个绑定了 this 指向的新函数；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("指向谁"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("bind 中第 0 个参数，就是 bind 返回的新函数的 this 指向；")]),t._v(" "),s("li",[t._v("bind 的其余参数将作为新函数的参数供调用时使用；")]),t._v(" "),s("li",[t._v("bind 是个”bug“式存在；")]),t._v(" "),s("li",[t._v("返回一个与原函数一模一样的函数，只是 this 指向不同；")]),t._v(" "),s("li",[t._v("bind 返回的新函数，不能再进行绑定；")])]),t._v(" "),s("p",[s("strong",[t._v("只要是 function 声明的函数体，都有 arguments")])]),t._v(" "),s("h3",{attrs:{id:"自己实现一个-bind-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自己实现一个-bind-方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 自己实现一个 bind 方法")]),t._v(" "),s("h3",{attrs:{id:"bind-原理分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bind-原理分析","aria-hidden":"true"}},[t._v("#")]),t._v(" bind 原理分析")]),t._v(" "),s("ul",[s("li",[t._v("bind: ECMAScrip 5.1 出来的；")]),t._v(" "),s("li",[t._v("旧版本支持 - 自己写方法实现 bind；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_this"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个新函数 - 一个已经改变了 this 指向的函数")]),t._v("\n")])])]),s("ul",[s("li",[t._v("fn.bind() - 调用函数的 bind 的方法，会返回一个新函数，在新函数中 this 会绑定成我们希望它指向的内容；")]),t._v(" "),s("li",[t._v("bind 返回的新函数 this 指向，")])]),t._v(" "),s("h2",{attrs:{id:"严格模式下-function-的-this-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#严格模式下-function-的-this-指向","aria-hidden":"true"}},[t._v("#")]),t._v(" 严格模式下 function 的 this 指向")]),t._v(" "),s("ul",[s("li",[t._v("在函数内部，this 的值取决于函数被调用的方式；")]),t._v(" "),s("li",[t._v("js 代码最上方添加 "),s("code",[t._v("use scrict")]),t._v("；")]),t._v(" "),s("li",[t._v("必须按照规范写代码；")]),t._v(" "),s("li",[t._v("在严格模式下，function 如果不是当作对象的属性进行调用，this 就指向 undefined；")]),t._v(" "),s("li",[t._v("严格模式体现了 JavaScript 更合理、更安全、更严谨的发展方向；")])])])}],!1,null,null,null);a.default=r.exports}}]);
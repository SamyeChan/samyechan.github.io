(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{411:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"learn-vue-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#learn-vue-router","aria-hidden":"true"}},[t._v("#")]),t._v(" Learn | Vue Router")]),t._v(" "),s("h2",{attrs:{id:"路由-前端路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由-前端路由","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由 & 前端路由")]),t._v(" "),s("p",[s("strong",[t._v("路由")]),t._v(" - 根据不同的 url 地址展示不同的内容或页面；")]),t._v(" "),s("p",[s("strong",[t._v("前端路由")]),t._v(" - 把不同路由对应不同的内容或页面的任务交给前端来做（之前是通过服务端根据 url 的不同返回不同的页面实现）；")]),t._v(" "),s("p",[t._v("结构不变，内容变的时候使用路由。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("优点：用户体验好，无需每次都从服务器全部获取，快速展现给用户；")])]),t._v(" "),s("li",[s("p",[t._v("缺点：不利于 SEO / 使用浏览器的前进、后退时会重新发送请求，没有合理利用缓存 / 单页面无法记住之前滚动的位置，即无法在前进、后退时记住滚动位置。")])])]),t._v(" "),s("h2",{attrs:{id:"vue-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router","aria-hidden":"true"}},[t._v("#")]),t._v(" vue-router")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("vue-router")]),t._v(" 来构建 SPA；")]),t._v(" "),s("ol",[s("li",[t._v("路由跳转："),s("code",[t._v("<router-link />")]),t._v(" 或者 "),s("code",[t._v("this.$router.push({path: ''})")]),t._v(";")]),t._v(" "),s("li",[t._v("路由渲染："),s("code",[t._v("<router-view />")])])]),t._v(" "),s("h2",{attrs:{id:"动态路由匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态路由匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态路由匹配")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("模式")]),t._v(" "),s("th",[t._v("匹配路径")]),t._v(" "),s("th",[t._v("$route.params")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/usr/:usrname")]),t._v(" "),s("td",[t._v("/usr/samye")]),t._v(" "),s("td",[t._v("{ usrname: 'samye'}")])]),t._v(" "),s("tr",[s("td",[t._v("/usr/:usrname/post/:post_id")]),t._v(" "),s("td",[t._v("/usr/samye/post/35")]),t._v(" "),s("td",[t._v("{ usrname: 'samye', post_id: 35 }")])])])]),t._v(" "),s("p",[s("code",[t._v("#")]),t._v(" 路由哈希")]),t._v(" "),s("h2",{attrs:{id:"嵌套路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套路由","aria-hidden":"true"}},[t._v("#")]),t._v(" 嵌套路由")]),t._v(" "),s("p",[t._v("路由嵌套路由")]),t._v(" "),s("p",[t._v("注意：在配置路由时，只有一级路由的 "),s("code",[t._v("path")]),t._v(" 是需要在路径前加 "),s("code",[t._v("/")]),t._v(" 的。")]),t._v(" "),s("h2",{attrs:{id:"编程式路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程式路由","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程式路由")]),t._v(" "),s("p",[t._v("通过 js 来实现页面的跳转：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传字符串")]),t._v("\n$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传对象")]),t._v("\n$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 带参（传递）")]),t._v("\n$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name?a=123'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 带参（获取）")]),t._v("\n$route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue-router 就是对 history 的再次封装")]),t._v("\n$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"命名路由和命名视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名路由和命名视图","aria-hidden":"true"}},[t._v("#")]),t._v(" 命名路由和命名视图")]),t._v(" "),s("p",[t._v("给路由定义不同的名字，根据名字进行匹配；\n给不同的 "),s("code",[t._v("router-view")]),t._v(" 定义名字，通过名字进行对应组件的渲染；")]),t._v(" "),s("p",[s("code",[t._v("params")]),t._v(" 路由的参数")]),t._v(" "),s("p",[t._v("命名视图：给 "),s("code",[t._v("router-view")]),t._v(" 定义名字")]),t._v(" "),s("h2",{attrs:{id:"导航守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导航守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" 导航守卫")]),t._v(" "),s("p",[t._v("全局、单个路由独享、组件级")]),t._v(" "),s("h3",{attrs:{id:"全局前置守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局前置守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局前置守卫")]),t._v(" "),s("p",[s("code",[t._v("router.beforEach")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nrouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * to   - 即将进入\n * from - 正要离开\n * next - “一定要调用该方法来 resolve 这个钩子“ \n */")]),t._v("\n")])])]),s("ul",[s("li",[t._v("当一个导航触发时，全局前置守卫按照创建顺序调用")])]),t._v(" "),s("p",[s("strong",[t._v("确保要调用 next 方法，否则钩子就不会被 resolved")])]),t._v(" "),s("h3",{attrs:{id:"全局解析守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局解析守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局解析守卫")]),t._v(" "),s("p",[s("code",[t._v("router.beforResolve")]),t._v(" -  2.5.0+")]),t._v(" "),s("ul",[s("li",[t._v("在导航被确认之前，")]),t._v(" "),s("li",[t._v("在所有组件内守卫和异步路由组件被解析之后，")]),t._v(" "),s("li",[t._v("解析守卫就被调用。")])]),t._v(" "),s("h3",{attrs:{id:"全局后置钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局后置钩子","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局后置钩子")]),t._v(" "),s("p",[s("code",[t._v("router.afterEach")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("不会接受 next 函数；")]),t._v(" "),s("li",[t._v("不会改变导航本身；")])]),t._v(" "),s("h3",{attrs:{id:"路由独享的守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由独享的守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由独享的守卫")]),t._v(" "),s("p",[s("code",[t._v("beforeEnter")]),t._v(" - 直接定义于路由配置中")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  routes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/sc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Sc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("beforeEnter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"组件内的守卫"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件内的守卫","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件内的守卫")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("beforeRouteEnter")])]),t._v(" "),s("li",[s("code",[t._v("beforeRouteUpdate")]),t._v(" - 2.2+")]),t._v(" "),s("li",[s("code",[t._v("beforeRouteLeave")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`...`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteEnter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在渲染该组件的对应路由被 confirm 前调用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不！能！获取组件实例 `this`")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为当守卫执行前，组件实例还没被创建")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteUpdate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在当前路由改变，但是该组件被复用时调用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以访问组件实例 `this`")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteLeave")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导航离开该组件的对应路由时调用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以访问组件实例 `this`")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"完整的导航解析过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整的导航解析过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 完整的导航解析过程")]),t._v(" "),s("ol",[s("li",[t._v("导航被触发。")]),t._v(" "),s("li",[t._v("在失活的组件里调用离开守卫。")]),t._v(" "),s("li",[t._v("调用全局的 beforeEach 守卫。")]),t._v(" "),s("li",[t._v("在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。")]),t._v(" "),s("li",[t._v("在路由配置里调用 beforeEnter。")]),t._v(" "),s("li",[t._v("解析异步路由组件。")]),t._v(" "),s("li",[t._v("在被激活的组件里调用 beforeRouteEnter。")]),t._v(" "),s("li",[t._v("调用全局的 beforeResolve 守卫 (2.5+)。")]),t._v(" "),s("li",[t._v("导航被确认。")]),t._v(" "),s("li",[t._v("调用全局的 afterEach 钩子。")]),t._v(" "),s("li",[t._v("触发 DOM 更新。")]),t._v(" "),s("li",[t._v("用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"questions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#questions","aria-hidden":"true"}},[t._v("#")]),t._v(" QUESTIONS")]),t._v(" "),s("h3",{attrs:{id:"路由守卫的无限循环问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由守卫的无限循环问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由守卫的无限循环问题")]),t._v(" "),s("p",[t._v("要想结束路由守卫，整段代码逻辑必须由 "),s("code",[t._v("next()")]),t._v(" 进行结尾；")])])}],!1,null,null,null);a.default=e.exports}}]);